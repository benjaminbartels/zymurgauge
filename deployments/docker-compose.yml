---
version: "3.9"
services:
  zymurgauge:
    restart: always
    image: benjaminbartels/zymurgauge
    container_name: zymurgauge
    depends_on:
      - telegraf
    environment:
      - ZYM_DEBUG=true
    volumes:
      - ${HOME}/.zymurgauge/data:/data
      - /var/run/dbus/:/var/run/dbus/:z
      - /sys:/sys

  nginx-proxy:
    restart: always
    image: nginx:1.21.6
    container_name: nginx-proxy
    depends_on:
      - influxdb
      - zymurgauge
    ports:
      - "8080:8080" # zymurgauge
      - "8086:8086" # influxdb
    volumes:
      - ${HOME}/.zymurgauge/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ${HOME}/.zymurgauge/nginx/cert.pem:/etc/nginx/conf.d/cert.pem:ro
      - ${HOME}/.zymurgauge/nginx/cert.key:/etc/nginx/conf.d/cert.key:ro

  influxdb:
    restart: always
    image: influxdb:2.2.0
    container_name: influxdb
    volumes:
      - ${HOME}/.zymurgauge/influxdb:/var/lib/influxdb2

  telegraf:
    restart: always
    image: telegraf:1.22.3
    container_name: telegraf
    depends_on:
      - influxdb
    ports:
      - "8125:8125/udp"
    # TODO: Find better solution. This allows for collection of docker metrics which might be out of scope
    user: telegraf:${GROUP_ID:?"Please run as follows 'GROUP_ID=$$(stat -c '%g' /var/run/docker.sock) docker-compose up'"}
    volumes:
      - ${HOME}/.zymurgauge/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/host/sys:ro
      - /proc:/host/proc:ro
      - /etc:/host/etc:ro
    environment:
      - HOST_PROC=/host/proc
      - HOST_SYS=/host/sys
      - HOST_ETC=/host/etc