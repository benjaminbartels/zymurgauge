---
openapi: 3.0.0
info:
  title: Zymurgauge API
  version: 0.1.0
servers:
  - url: http://{host}:{port}/api/{basePath}
    description: The production API server
    variables:
      host:
        enum:
          - "localhost"
          - "zymurgauge.local"
        default: zymurgauge.local
      port:
        enum:
          - "8080"
        default: "8080"
      basePath:
        enum:
          - "v1"
        default: v1
paths:
  "/auth/login":
    post:
      description: Validates users credentials
      operationId: login
      requestBody:
        description: Users credentials
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginCredentials"
            examples:
              credentials:
                $ref: "#/components/examples/loginCredentials"
      responses:
        "200":
          description: OK response with auth token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginSuccess"
              examples:
                chambers:
                  $ref: "#/components/examples/loginSuccess"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                incorrectUsername:
                  $ref: "#/components/examples/incorrectUsernameError"
                incorrectPassword:
                  $ref: "#/components/examples/incorrectPasswordError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                error:
                  $ref: "#/components/examples/internalServerError"
  "/auth/update":
    post:
      description: Validates users credentials
      operationId: login
      requestBody:
        description: Users credentials
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginCredentials"
            examples:
              credentials:
                $ref: "#/components/examples/loginCredentials"
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
              examples:
                chambers:
                  $ref: "#/components/examples/success"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                error:
                  $ref: "#/components/examples/internalServerError"
  "/chambers":
    get:
      description: Returns all chambers
      operationId: getChambers
      responses:
        "200":
          description: OK response with list of chambers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Chamber"
              examples:
                chambers:
                  $ref: "#/components/examples/chambers"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                error:
                  $ref: "#/components/examples/internalServerError"
    post:
      description: Saves a chamber
      operationId: saveChamber
      requestBody:
        description: Chamber to save
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Chamber"
            examples:
              newChamber:
                $ref: "#/components/examples/newChamber"
              updateChamber:
                $ref: "#/components/examples/updateChamber"
      responses:
        "200":
          description: OK response with saved chamber
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Chamber"
              examples:
                chamber:
                  $ref: "#/components/examples/chamber"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                invalidConfigurationError:
                  $ref: "#/components/examples/invalidConfigurationError"
                fermentationInProgressError:
                  $ref: "#/components/examples/fermentationInProgressError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                error:
                  $ref: "#/components/examples/internalServerError"
  "/chambers/{id}":
    get:
      description: Returns a single chamber by id
      operationId: getChamberByID
      parameters:
        - name: id
          in: path
          description: ID of chamber to get
          required: true
          schema:
            type: string
            format: uuid
          example: 96f58a65-03c0-49f3-83ca-ab751bbf3768
      responses:
        "200":
          description: OK response with a chamber
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Chamber"
              examples:
                chamber:
                  $ref: "#/components/examples/chamber"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                error:
                  $ref: "#/components/examples/chamberNotFoundError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                error:
                  $ref: "#/components/examples/internalServerError"
    delete:
      description: Deletes a single chamber by id
      operationId: deleteChamberByID
      parameters:
        - name: id
          in: path
          description: ID of chamber to delete
          required: true
          schema:
            type: string
            format: uuid
          example: 96f58a65-03c0-49f3-83ca-ab751bbf3768
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
              examples:
                chamber:
                  $ref: "#/components/examples/success"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                error:
                  $ref: "#/components/examples/fermentationInProgressError"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                error:
                  $ref: "#/components/examples/chamberNotFoundError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                error:
                  $ref: "#/components/examples/internalServerError"
  "/chambers/{id}/start":
    post:
      description: Starts a fermentation at the given step
      operationId: startFermentation
      parameters:
        - name: id
          in: path
          description: ID of the chamber to start fermentation in
          required: true
          schema:
            type: string
            format: uuid
          example: 96f58a65-03c0-49f3-83ca-ab751bbf3768
        - name: step
          in: query
          description: step of fermentation
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
              examples:
                chamber:
                  $ref: "#/components/examples/success"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                invalidStepError:
                  $ref: "#/components/examples/invalidStepError"
                noCurrentFermentationError:
                  $ref: "#/components/examples/noCurrentFermentationError"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                error:
                  $ref: "#/components/examples/chamberNotFoundError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                error:
                  $ref: "#/components/examples/internalServerError"
  "/chambers/{id}/stop":
    post:
      description: Stops a fermentation
      operationId: stopFermentation
      parameters:
        - name: id
          in: path
          description: ID of the chamber to stop fermentation in
          required: true
          schema:
            type: string
            format: uuid
          example: 96f58a65-03c0-49f3-83ca-ab751bbf3768
      responses:
        "200":
          description: OK response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
              examples:
                chamber:
                  $ref: "#/components/examples/success"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                notFermentingError:
                  $ref: "#/components/examples/notFermentingError"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                error:
                  $ref: "#/components/examples/chamberNotFoundError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                error:
                  $ref: "#/components/examples/internalServerError"
  "/thermometers":
    get:
      description: Returns all thermometer ids
      operationId: getThermometers
      responses:
        "200":
          description: OK response with list of thermometer ids
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example: [28-000006285484, 28-0000041ab222]
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                error:
                  $ref: "#/components/examples/internalServerError"
  "/batches":
    get:
      description: Returns all batches
      operationId: getBatches
      responses:
        "200":
          description: OK response with list of batches
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BatchSummary"
              examples:
                error:
                  $ref: "#/components/examples/batchSummaries"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                error:
                  $ref: "#/components/examples/internalServerError"
  "/batches/{id}":
    get:
      description: Returns a single batch by id
      operationId: getBatchByID
      parameters:
        - name: id
          in: path
          description: ID of batch to get
          required: true
          schema:
            type: string
          example: KBTM3F9soO5TtbAx0A5mBZTAUsNZyg
      responses:
        "200":
          description: OK response with a batch
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchDetail"
              examples:
                error:
                  $ref: "#/components/examples/batchDetail"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                error:
                  $ref: "#/components/examples/batchNotFoundError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                error:
                  $ref: "#/components/examples/internalServerError"
  "/settings":
    get:
      description: Get settings
      operationId: getSettings
      responses:
        "200":
          description: OK response with saved chamber
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Settings"
              examples:
                chamber:
                  $ref: "#/components/examples/settings"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                error:
                  $ref: "#/components/examples/internalServerError"
components:
  schemas:
    LoginCredentials:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    LoginSuccess:
      type: object
      properties:
        token:
          type: string
    Chamber:
      type: object
      required:
        - name
        - deviceConfig
        - chillingDifferential
        - heatingDifferential
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        deviceConfig:
          type: object
          required:
            - chillerGpio
            - heaterGpio
            - beerThermometerType
            - beerThermometerId
          properties:
            chillerGpio:
              type: integer
              format: int32
              minimum: 0
              maximum: 25
            heaterGpio:
              type: integer
              format: int32
              minimum: 0
              maximum: 25
            beerThermometerType:
              type: string
              enum:
                - DS18B20
                - Tilt
            beerThermometerId:
              type: string
            auxiliaryThermometerType:
              type: string
              enum:
                - DS18B20
                - Tilt
            auxiliaryThermometerId:
              type: string
            externalThermometerType:
              type: string
              enum:
                - DS18B20
                - Tilt
            externalThermometerId:
              type: string
            hydrometerType:
              type: string
              enum:
                - Tilt
            hydrometerId:
              type: string
        chillingDifferential:
          type: number
          format: double
        heatingDifferential:
          type: number
          format: double
        currentBatch:
          type: object
          $ref: "#/components/schemas/BatchDetail"
        modTime:
          type: string
          format: date-time
          readOnly: true
        readings:
          type: object
          readOnly: true
          properties:
            beerTemperature:
              type: number
              format: double
              readOnly: true
            auxiliaryTemperature:
              type: number
              format: double
              readOnly: true
            externalTemperature:
              type: number
              format: double
              readOnly: true
            hydrometerGravity:
              type: number
              format: double
              readOnly: true
    BatchSummary:
      type: object
      required:
        - batchID
        - batchNumber
        - recipeName
      properties:
        batchId:
          type: string
        batchNumber:
          type: number
          format: int32
        recipeName:
          type: string
    BatchDetail:
      type: object
      required:
        - id
        - number
        - recipe
      properties:
        id:
          type: string
        number:
          type: number
          format: int32
        recipe:
          type: object
          $ref: "#/components/schemas/Recipe"
    Recipe:
      type: object
      required:
        - name
        - fermentation
        - originalGravity
        - finalGravity
      properties:
        name:
          type: string
        fermentation:
          type: object
          $ref: "#/components/schemas/Fermentation"
        originalGravity:
          type: number
          format: double
        finalGravity:
          type: number
          format: double
    Fermentation:
      type: object
      required:
        - name
        - steps
      properties:
        name:
          type: string
        steps:
          items:
            type: object
            $ref: "#/components/schemas/FermentationStep"
    FermentationStep:
      type: object
      required:
        - name
        - temperature
        - duration
      properties:
        name:
          type: string
        temperature:
          type: number
          format: double
        duration:
          type: number
          format: int32
    Settings:
      type: object
      required:
        - temperatureUnits
        - authSecret
      properties:
        temperatureUnits:
          type: string
          enum:
            - Celsius
            - Fahrenheit
        authSecret:
          type: string
        brewfatherApiUserId:
          type: string
        brewfatherApiKey:
          type: string
        brewfatherLogUrl:
          type: string
        influxDbUrl:
          type: string
        influxDbReadToken:
          type: string
        statsDAddress:
          type: string
    Status:
      type: object
      properties:
        message:
          type: string
    Error:
      type: object
      properties:
        errMessage:
          type: string
  examples:
    loginCredentials:
      value:
        username: your_username
        password: your_password
    loginSuccess:
      value:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
    chamber:
      value:
        id: 96f58a65-03c0-49f3-83ca-ab751bbf3768
        name: My Fermentation Chamber
        deviceConfig:
          chillerGpio: "22"
          heaterGpio: "17"
          beerThermometerType: "ds18b20"
          beerThermometerId: "28-000006285484"
          auxiliaryThermometerType: "tilt"
          auxiliaryThermometerId: "orange"
          externalThermometerType: "ds18b20"
          externalThermometerId: "28-000003315552"
          hydrometerType: "tilt"
          hydrometerId: "orange"
        chillingDifferential: 0.5
        heatingDifferential: 0.5
        currentBatch:
          id: KBTM3F9soO5TtbAx0A5mBZTAUsNZyg
          number: 1
          recipe:
          name: My Pale Ale
          fermentation:
            name: ale
            steps:
              - name: Primary
                temperature: 19.4
              - name: Secondary
                temperature: 10
              - name: Conditioning
                temperature: 30
          originalGravity: 1.070853461
          finalGravity: 1.016
        currentFermentationStep: Primary
        modTime: "2021-10-28T09:54:07.155132Z"
        readings:
          beerTemperature: 20
          auxiliaryTemperature: 22.1
          externalTemperature: 23.1
          hydrometerGravity: 1.002
    chambers:
      value:
        - id: 96f58a65-03c0-49f3-83ca-ab751bbf3768
          name: My Fermentation Chamber
          deviceConfig:
            chillerGpio: "22"
            heaterGpio: "17"
            beerThermometerType: "ds18b20"
            beerThermometerId: "28-000006285484"
            auxiliaryThermometerType: "tilt"
            auxiliaryThermometerId: "orange"
            externalThermometerType: "ds18b20"
            externalThermometerId: "28-000003315552"
            hydrometerType: "tilt"
            hydrometerId: "orange"
          chillingDifferential: 0.5
          heatingDifferential: 0.5
          currentBatch:
            id: KBTM3F9soO5TtbAx0A5mBZTAUsNZyg
            number: 1
            recipe:
            name: My Pale Ale
            fermentation:
              name: ale
              steps:
                - name: Primary
                  temperature: 19.4
                - name: Secondary
                  temperature: 10
                - name: Conditioning
                  temperature: 30
            originalGravity: 1.070853461
            finalGravity: 1.016
          currentFermentationStep: Primary
          modTime: "2021-10-28T09:54:07.155132Z"
          readings:
            beerTemperature: 20
            auxiliaryTemperature: 22.1
            externalTemperature: 23.1
            hydrometerGravity: 1.002
            readings:
              beerTemperature: 20
              auxiliaryTemperature: 22.1
              externalTemperature: 23.1
              hydrometerGravity: 1.002
        - id: dd2610fe-95fc-45f3-8dd8-3051fb1bd4c1
          name: My Fermentation Chamber
          deviceConfig:
            chillerGpio: "22"
            heaterGpio: "17"
            beerThermometerType: "ds18b20"
            beerThermometerId: "28-000006285484"
            auxiliaryThermometerType: "tilt"
            auxiliaryThermometerId: "orange"
            externalThermometerType: "ds18b20"
            externalThermometerId: "28-000003315552"
            hydrometerType: "tilt"
            hydrometerId: "orange"
          chillingDifferential: 0.5
          heatingDifferential: 0.5
          modTime: "2021-10-28T09:54:07.155132Z"
    newChamber:
      value:
        name: My Fermentation Chamber
        deviceConfig:
          chillerGpio: "22"
          heaterGpio: "17"
          beerThermometerType: "ds18b20"
          beerThermometerId: "28-000006285484"
          auxiliaryThermometerType: "tilt"
          auxiliaryThermometerId: "orange"
          externalThermometerType: "ds18b20"
          externalThermometerId: "28-000003315552"
          hydrometerType: "tilt"
          hydrometerId: "orange"
        chillingDifferential: 0.5
        heatingDifferential: 0.5
    updateChamber:
      value:
        id: 96f58a65-03c0-49f3-83ca-ab751bbf3768
        name: My Fermentation Chamber
        deviceConfig:
          chillerGpio: "22"
          heaterGpio: "17"
          beerThermometerType: "ds18b20"
          beerThermometerId: "28-000006285484"
          auxiliaryThermometerType: "tilt"
          auxiliaryThermometerId: "orange"
          externalThermometerType: "ds18b20"
          externalThermometerId: "28-000003315552"
          hydrometerType: "tilt"
          hydrometerId: "orange"
        chillingDifferential: 0.5
        heatingDifferential: 0.5
    batchSummaries:
      value:
        - id: KBTM3F9soO5TtbAx0A5mBZTAUsNZyg
          fermentation:
            Name: Ale
            Steps:
              - type: Primary
                temperature: 19.4
                duration: 4
              - type: Secondary
                duration: 10
                temperature: 19.
              - type: Conditioning
                duration: 30
                temperature: 18.3
        - id: qbFkFfeaJdL1ZibNLTu2lfRjIii1qW
          name: Stout
          fermentation:
            Name: Ale
            Steps:
              - type: Primary
                temperature: 19.4
                duration: 4
              - type: Conditioning
                duration: 30
                temperature: 18.3
    batchDetail:
      value:
        name: Ale
        batchId: KBTM3F9soO5TtbAx0A5mBZTAUsNZyg
        recipeName: My Pale Ale
        originalGravity: 1.070853461
        finalGravity: 1.016
        steps:
          - name: Primary
            temperature: 19.4
            duration: 4
          - name: Secondary
            duration: 10
            temperature: 19.
          - name: Conditioning
            duration: 30
            temperature: 18.3
    success:
      value:
        message: Success
    settings:
      value:
        temperatureUnits: "Celsius"
        authSecret: "jfj39JH9fmm2HJHDFK9jsjmjgkJDKSNHF9kJHHDHJ88NJNJdkj1jnjjkDKJKdFJs"
        brewfatherApiUserId: "hdklSUJ792KHGF5JDJut709MJDY1"
        brewfatherApiKey: "hhdfokSJjh8ikkdfjKSKD9865SKKJD86SKJDH44q11dkdkdTJDHhhdlld997V6Sw"
        brewfatherLogUrl: "http://log.brewfather.net/stream?id=hd912jhf6sjf0e"
        influxDbUrl: "http://zymurgauge.local:8086"
        influxDbReadToken: "dj3kFj2jfFjshFkduwJGIQdyt54jy2321"
        statsDAddress: "localhost:8125"
    incorrectUsernameError:
      value:
        error: incorrect username
    incorrectPasswordError:
      value:
        error: incorrect password
    chamberNotFoundError:
      value:
        error: chamber '96f58a65-03c0-49f3-83ca-ab751bbf3768' not found
    batchNotFoundError:
      value:
        error: batch 'KBTM3F9soO5TtbAx0A5mBZTAUsNZyg' not found
    invalidConfigurationError:
      value:
        error: "configuration is invalid: ..."
    fermentationInProgressError:
      value:
        error: fermentation is in progress
    invalidStepError:
      value:
        error: step 'Secondary' is invalid for chamber '96f58a65-03c0-49f3-83ca-ab751bbf3768'
    noCurrentFermentationError:
      value:
        error: chamber does not have a current fermentation
    notFermentingError:
      value:
        error: fermentation has not started
    internalServerError:
      value:
        error: internal server error
